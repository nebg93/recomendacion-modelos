}
x<-periodico$items[1]
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
sapply(x, clase)
x<-sapply(x, clase)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x<-sapply(x, clase)
return(x)
}
x<-periodico$items[1]
sapply(x, cambio)
x<-periodico$items[1:3,]
x<-periodico$items[1:3]
x<-sapply(x, cambio)
x
x<-periodico$items[1:3]
x$V2<-sapply(x, cambio)
x<-periodico$items[1:3]
y<-sapply(x, cambio)
x
y
sapply(periodico, cambio)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x<-sapply(x, clase)
return(x)
}
clase<-function(x){
if (x<=9) {
articulo<-paste("articulo", x, sep = "")
res <- paste("deportes/", articulo, sep = "")
}
else if (x<=18) {
articulo<-paste("articulo", x-9, sep = "")
res <- paste("politica/", articulo, sep = "")
}
else if (x<=27) {
articulo<-paste("articulo", x-18, sep = "")
res <- paste("variedades/", articulo, sep = "")
}
else if (x<=36) {
articulo<-paste("articulo", x-27, sep = "")
res <- paste("internacional/", articulo, sep = "")
}
else if (x<=45) {
articulo<-paste("articulo", x-36, sep = "")
res <- paste("nacional/", articulo, sep = "")
}
else if (x<=54) {
articulo<-paste("articulo", x-45, sep = "")
res <- paste("sucesos/", articulo, sep = "")
}
else if (x<=63) {
articulo<-paste("articulo", x-54, sep = "")
res <- paste("comunidad/", articulo, sep = "")
}
else if (x<=72) {
articulo<-paste("articulo", x-63, sep = "")
res <- paste("negocios/", articulo, sep = "")
}
else if (x<=81) {
articulo<-paste("articulo", x-72, sep = "")
res <- paste("opinion/", articulo, sep = "")
}
return(res)
}
sapply(periodico, cambio)
sapply(periodico, cambio)
sapply(periodico$items, cambio)
periodico$articles<-sapply(periodico$items, cambio)
View(periodico)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x<-sapply(x, clase)
return(as.list(x))
}
periodico$articles<-sapply(periodico$items, cambio)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x<-sapply(x, clase)
return(list(x))
}
periodico$articles<-sapply(periodico$items, cambio)
View(periodico)
class(periodico$dif)
class(periodico$articles)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x <- sapply(x, clase)
return(x)
}
periodico$articles<-sapply(periodico$items, cambio)
class(periodico$articles)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x <- sapply(x, clase)
return(unlist(x))
}
periodico$articles<-sapply(periodico$items, cambio)
class(periodico$articles)
View(periodico)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x <- sapply(x, clase)
return(as.character(unlist(x)))
}
periodico$articles<-sapply(periodico$items, cambio)
class(periodico$articles)
class(periodico$articles[1])
class(periodico$articles[[1]])
periodico$articles<-sapply(periodico$items, cambio)
?apriori
library(arules)
?apriori
gsub("c(", "", periodico$articles)
gsub("c//(", "", periodico$articles)
gsub("c", "", periodico$articles)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x <- sapply(x, clase)
return(as.vector(x))
}
periodico$articles<-sapply(periodico$items, cambio)
View(periodico)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x <- sapply(x, clase)
x <- paste(x, collapse=',')
return(x)
}
periodico$articles<-sapply(periodico$items, cambio)
names(p)[5]<-"items"
#Dejamos en esta columna únicamente los números de los items separados por coma
p$items<-gsub("item", "", p$items)
p$items<-gsub("(\\{)", "", p$items)
p$items<-gsub("(\\})", "", p$items)
p$items<-gsub(",", " ", p$items)
#Utilizamos la funcion cambio() y clase() para colocar los articulos
p$articles<-sapply(p$items, cambio)
View(p)
p$items<-NULL
p$dif<-NULL
#Nombramos la 5ta columna como "items" en lugar de "articles"
#Se Cargan las librerías y la data
library(arules)
library(arulesViz)
p<-read.csv("periodico.csv")
#Se realiza la resta de los tiempos de entrada y salida de los usuarios
p$dif<-as.numeric(difftime(p$exit, p$entry))
#Se colocan en la variable "bot" todas aquellas transacciones que duraron menos de 20 segundos
bot<-p[p$dif<=20,]
#Se eliminan del dataset aquellas transacciones que fueron clasificadas como bots
p<-p[p$dif>20,]
View(p)
#Nombramos la 5ta columna como "items" en lugar de "articles"
names(p)[5]<-"items"
#Dejamos en esta columna únicamente los números de los items separados por coma
p$items<-gsub("item", "", p$items)
p$items<-gsub("(\\{)", "", p$items)
p$items<-gsub("(\\})", "", p$items)
p$items<-gsub(",", " ", p$items)
#Utilizamos la funcion cambio() y clase() para colocar los articulos
p$articles<-sapply(p$items, cambio)
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x <- sapply(x, clase)
x <- paste(x, collapse=',')
return(x)
}
clase<-function(x){
if (x<=9) {
articulo<-paste("articulo", x, sep = "")
res <- paste("deportes/", articulo, sep = "")
}
else if (x<=18) {
articulo<-paste("articulo", x-9, sep = "")
res <- paste("politica/", articulo, sep = "")
}
else if (x<=27) {
articulo<-paste("articulo", x-18, sep = "")
res <- paste("variedades/", articulo, sep = "")
}
else if (x<=36) {
articulo<-paste("articulo", x-27, sep = "")
res <- paste("internacional/", articulo, sep = "")
}
else if (x<=45) {
articulo<-paste("articulo", x-36, sep = "")
res <- paste("nacional/", articulo, sep = "")
}
else if (x<=54) {
articulo<-paste("articulo", x-45, sep = "")
res <- paste("sucesos/", articulo, sep = "")
}
else if (x<=63) {
articulo<-paste("articulo", x-54, sep = "")
res <- paste("comunidad/", articulo, sep = "")
}
else if (x<=72) {
articulo<-paste("articulo", x-63, sep = "")
res <- paste("negocios/", articulo, sep = "")
}
else if (x<=81) {
articulo<-paste("articulo", x-72, sep = "")
res <- paste("opinion/", articulo, sep = "")
}
return(res)
}
p$items<-NULL
p$dif<-NULL
View(p)
rules<-apriori(data = p$articles, parameter = list(supp=0.01, conf=0.7))
transactions <- as(split(p$articles, p$X), "transactions")
rules<-apriori(data = transactions, parameter = list(supp=0.01, conf=0.7))
instpect(rules)
inspect(rules)
summary(rules)
rules<-apriori(data = transactions, parameter = list(supp=0.005, conf=0.7))
summary(rules)
rules<-apriori(data = transactions, parameter = list(supp=0.001, conf=0.7))
rules<-apriori(data = transactions, parameter = list(supp=0.001, conf=0.5))
rules<-apriori(data = transactions, parameter = list(supp=0.0001, conf=0.5))
rules<-apriori(data = transactions, parameter = list(supp=0.00005, conf=0.5))
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.5))
transactions <- as(split(as.vector(p$articles), as.vector(p$X)), "transactions")
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.5))
summary(rules)
summary(bot)
dim(bot)
write(periodico$articles, file = "transactions")
transactions <- read.transactions("transactions", format="basket", sep=",")
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.5))
summary(rules)
rules<-apriori(data = transactions, parameter = list(supp=0.00005, conf=0.7))
rules<-apriori(data = transactions, parameter = list(supp=0.00005, conf=0.8))
rules<-apriori(data = transactions, parameter = list(supp=0.00006, conf=0.8))
rules<-apriori(data = transactions, parameter = list(supp=0.0001, conf=0.8))
rules<-apriori(data = transactions, parameter = list(supp=0.001, conf=0.8))
summary(rules)
rhs = inspect(unique(rules@rhs))
class(rhs$items)
?kmeans
install.packages("stringdist")
library(stringdist)
consecuente <- unique(rules@rhs)
dist <- stringdistmatrix(consecuente, method = "jaccard")
dist <- stringdistmatrix(as.vector(consecuente), method = "jaccard")
consecuente <- unique(rules@rhs)
consecuente <- inspect(unique(rules@rhs))
dist <- stringdistmatrix(consecuente, method = "jaccard")
dist
consecuente
as.character(consecuente)
View(consecuente)
as.character(consecuente$items)
consecuente <- as.character(consecuente$items)
dist <- stringdistmatrix(consecuente, method = "jaccard")
dist
?hclust
y<-as.data.frame(p$articles)
y$X<-p$X
View(y)
y$articles<-as.data.frame(p$articles)
rm(y)
y$X<-as.data.frame(p$X)
y<-data.frame()
y$X<-p$X
y$X<-as.data.frame(p$X)
rm(y)
?data.frame
y$X<-as.data.frame(p$X)
y<-as.data.frame(p$X)
y$articles<-p$articles
View(y)
names(y)[1]<-"X"
View(y)
View(y)
y<-as.data.frame(p$articles)
names(y)[1]<-"articles"
View(y)
as(y, "transactions")
transactions<-as(y, "transactions")
rules<-apriori(data = transactions, parameter = list(supp=0.001, conf=0.8))
write.csv(p$articles,file="transactions")
write(p$articles,file="transactions")
transactions <- read.transactions("transactions", format="basket", sep=",")
rules<-apriori(data = transactions, parameter = list(supp=0.001, conf=0.8))
summary(rules)
write(p$articles,file="transactions")
transactions <- read.transactions("transactions", format="basket", sep=",")
rules<-apriori(data = transactions, parameter = list(supp=0.001, conf=0.8))
summary(rules)
#Se Cargan las librerías y la data
library(arules)
library(arulesViz)
p<-read.csv("periodico.csv")
#Se realiza la resta de los tiempos de entrada y salida de los usuarios
p$dif<-as.numeric(difftime(p$exit, p$entry))
#Se colocan en la variable "bot" todas aquellas transacciones que duraron menos de 20 segundos
bot<-p[p$dif<=20,]
dim(bot)
#Se observan 2302 transacciones bot.
#Se eliminan del dataset aquellas transacciones que fueron clasificadas como bots
p<-p[p$dif>20,]
#Nombramos la 5ta columna como "items" en lugar de "articles"
names(p)[5]<-"items"
#Dejamos en esta columna únicamente los números de los items separados por coma
p$items<-gsub("item", "", p$items)
p$items<-gsub("(\\{)", "", p$items)
p$items<-gsub("(\\})", "", p$items)
p$items<-gsub(",", " ", p$items)
#Utilizamos la funcion cambio() y clase() para colocar los articulos
cambio<-function(x){
x <- strsplit(as.character(x), " ")
x <- as.numeric(unlist(x))
x <- sapply(x, clase)
x <- paste(x, collapse=',')
return(x)
}
clase<-function(x){
if (x<=9) {
articulo<-paste("articulo", x, sep = "")
res <- paste("deportes/", articulo, sep = "")
}
else if (x<=18) {
articulo<-paste("articulo", x-9, sep = "")
res <- paste("politica/", articulo, sep = "")
}
else if (x<=27) {
articulo<-paste("articulo", x-18, sep = "")
res <- paste("variedades/", articulo, sep = "")
}
else if (x<=36) {
articulo<-paste("articulo", x-27, sep = "")
res <- paste("internacional/", articulo, sep = "")
}
else if (x<=45) {
articulo<-paste("articulo", x-36, sep = "")
res <- paste("nacional/", articulo, sep = "")
}
else if (x<=54) {
articulo<-paste("articulo", x-45, sep = "")
res <- paste("sucesos/", articulo, sep = "")
}
else if (x<=63) {
articulo<-paste("articulo", x-54, sep = "")
res <- paste("comunidad/", articulo, sep = "")
}
else if (x<=72) {
articulo<-paste("articulo", x-63, sep = "")
res <- paste("negocios/", articulo, sep = "")
}
else if (x<=81) {
articulo<-paste("articulo", x-72, sep = "")
res <- paste("opinion/", articulo, sep = "")
}
return(res)
}
p$articles<-sapply(p$items, cambio)
p$items<-NULL
p$dif<-NULL
write(p$articles, file="transactions")
transactions <- read.transactions("transactions", format="basket", sep=",")
rules<-apriori(data = transactions, parameter = list(supp=0.001, conf=0.8))
summary(rules)
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.8))
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.7))
rules<-apriori(data = transactions, parameter = list(supp=0.00003, conf=0.7))
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.7))
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.8))
inspect(rules)
head(inspect(rules))
inspect(rules)[1:5]
library(stringdist)
consecuente <- inspect(unique(rules@rhs))
consecuente <- as.character(consecuente$items)
dist <- stringdistmatrix(consecuente, method = "jaccard")
?hclust
plot(dist)
hc <- hclust(dist, method="single")
ct <- cutree(hc, k=8)
plot(ct)
dist <- stringdistmatrix(consecuente)
plot(dist)
hc <- hclust(dist, method="complete")
ct <- cutree(hc, k=8)
plot(ct)
plot(ct, col=ct)
hc <- hclust(dist, method="single")
ct <- cutree(hc, k=8)
plot(ct, col=ct)
ct <- cutree(hc, k=8)
plot(ct, col=ct)
```
dist <- stringdistmatrix(consecuente)
plot(dist)
hc <- hclust(dist, method="single")
ct <- cutree(hc, k=8)
plot(ct, col=ct)
consecuente <- inspect(unique(rules@rhs))
plot(ct, col=ct, pch=19)
plot(ct, col=ct, pch=19, cex=0.5)
plot(ct, col=ct, pch=19)
plot(hc)
plot(hc, k=8)
plot(hc, h=8)
plot(hc, h=3)
hc <- hclust(dist, method="single")
plot(hc, h=3)
plot(hc, h=1)
plot(hc, h=5)
ct <- cutree(hc, k=8)
plot(ct, col=ct, pch=19)
typesUsers = data.frame(as.character(rhs$items), as.numeric(rhs$items), ct)
rhs$class <- ct
View(rhs)
consecuente <- inspect(rules@rhs)
unique(
)
)
consecuente <- inspect(unique(rules@rhs))
consecuente <- as.character(consecuente$items)
View(rhs)
consecuente$class <- ct
as.data.frame(consecuente)$class <- ct
?as.data.frame
consecuente <- as.data.frame(consecuente)
View(consecuente)
consecuente <- inspect(unique(rules@rhs))
View(consecuente)
consecuente$class <- ct
table(consecuente$class)
table(consecuente$class, consecuente$items)
table(consecuente$items)
table(consecuente$class)
new.user<-p[2000,]
which(rules@lhs == new.user$articles)
inspect(rules(rules@lhs == new.user$articles))
inspect(rules[rules@lhs == new.user$articles])
inspect(rules@lhs[rules@lhs == new.user$articles])
class(rules@lhs)
inspect(rules@lhs)
inspect(rules@lhs)[inspect(rules@lhs)==new.user$articles]]
inspect(rules@lhs)[inspect(rules@lhs)==new.user$articles]
lhs<-inspect(rules@lhs)
inspect(rules@lhs)
lhs = inspect(rules@lhs)
lhs <- unique(inspect(rules@lhs))
lhs <- as.character(inspect(rules@lhs))
antecedente <- inspect(unique(rules@lhs))
antecedente
reglas <- subset(rules, subset = lhs %ain% new.user$articles )
View(new.user)
reglas <- subset(rules, subset = lhs %ain% as.character(new.user$articles ))
new.user <- c("deportes/articulo2,deportes/articulo3")
reglas <- subset(rules, subset = lhs %ain% new.user$articles )
reglas <- subset(rules, subset = lhs %ain% new.user)
reglas <- subset(rules, lhs %ain% new.user)
inspect(rules@lhs)==new.user$articles
inspect(rules@lhs)==new.user
rules<-apriori(data = transactions, parameter = list(supp=0.00002, conf=0.8))
reglas <- subset(rules, lhs %ain% new.user)
new.user <- c("deportes/articulo2")
reglas <- subset(rules, lhs %ain% new.user)
reglas
inspect(reglas)
?sort
sort(inspect(reglas), by="lift")
inspect(head(reglas, by="lift"))
inspect(head(reglas, by="conf"))
inspect(head(reglas, by="lift"))
?sort
?order
order(periodico, periodico$dif)
sort(periodico)
sort(periodico$dif)
sort(periodico$dif, decreasing = TRUE)
periodico[order(periodico$dif, decreasing = TRUE),]
periodico$dif[order(periodico$dif, decreasing = TRUE),]
periodico$dif[order(periodico$dif, decreasing = TRUE)]
periodico[order(periodico$dif, decreasing = TRUE),]
primeras<-p[order(periodico$dif, decreasing = TRUE),]
primeras[1:10]
primeras[1:10,]
View(primeras)
View(p)
primeras<-p[order(periodico$dif, decreasing = FALSE),]
primeras<-p[order(periodico$dif, decreasing = TRUE),]
menor<-p[order(periodico$dif, decreasing = FALSE),]
menor[1:10,]
?count
table(periodico$articles)
t<-table(periodico$articles)
sort(t)
datos <- (sort(tail(sort(table(periodico$articles)), 10), decreasing = T))
datos
aparece <- (tail(sort(table(periodico$articles), 10), decreasing = T))
aparece <- (tail(sort(table(periodico$articles)), 10))
aparece
#install.packages("stringdist")
